<!--
Copyright (c) 2025 Hugo Monteiro
Licensed under the MIT License. See LICENSE file in the project root for license information.
-->
<Window x:Class="StockTicker.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Configuration" Height="450" Width="500"
        WindowStartupLocation="CenterScreen"
        Background="#1E1E1E"
        ResizeMode="NoResize"
        Topmost="False">
    
    <Window.Resources>
        <!-- Dark theme ComboBox style -->
        <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#2D2D2D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Focusable="False"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <Path Grid.Column="1"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M 0 0 L 4 4 L 8 0 Z"
                                                    Fill="White" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="5,3,23,3"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left" />
                            <Popup Name="Popup"
                                 Placement="Bottom"
                                 IsOpen="{TemplateBinding IsDropDownOpen}"
                                 AllowsTransparency="True"
                                 Focusable="False"
                                 PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder"
                                          Background="#2D2D2D"
                                          BorderBrush="#555555"
                                          BorderThickness="1"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Dark theme ComboBoxItem style -->
        <Style x:Key="DarkComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="#2D2D2D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="#0078D4"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#0078D4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Configuration" 
                   Foreground="White" FontSize="18" FontWeight="Bold" 
                   Margin="0,0,0,20"/>

        <TextBlock Grid.Row="1" Text="Crypto Currencies (comma separated symbols):" 
                   Foreground="White" Margin="0,0,0,5"/>
        
        <TextBox Grid.Row="2" x:Name="CryptoTextBox" 
                 Background="#2D2D2D" Foreground="White" 
                 BorderBrush="#555555" BorderThickness="1"
                 Padding="5" Height="30" Margin="0,0,0,10"/>

        <TextBlock Grid.Row="3" Text="Example: BTC,ETH,BNB,XRP,SOL" 
                   Foreground="#888888" FontSize="10" Margin="0,0,0,15"/>

        <TextBlock Grid.Row="4" Text="Crypto Exchange API:" 
                   Foreground="White" Margin="0,0,0,5"/>
        
        <ComboBox Grid.Row="5" x:Name="ExchangeComboBox" 
                  Style="{StaticResource DarkComboBoxStyle}"
                  ItemContainerStyle="{StaticResource DarkComboBoxItemStyle}"
                  Margin="0,0,0,10"
                  SelectionChanged="ExchangeComboBox_SelectionChanged"/>

        <TextBlock Grid.Row="6" x:Name="ApiKeyLabel"
                   Text="API Key (optional):" 
                   Foreground="White" Margin="0,0,0,5"/>
        
        <TextBox Grid.Row="7" x:Name="ApiKeyTextBox" 
                 Background="#2D2D2D" Foreground="White" 
                 BorderBrush="#555555" BorderThickness="1"
                 Padding="5" Height="30" Margin="0,0,0,10"/>

        <TextBlock Grid.Row="8" Text="Leave empty if not required. Lower refresh intervals may hit API rate limits." 
                   Foreground="#888888" FontSize="10" Margin="0,0,0,15"/>

        <!-- Button row with refresh interval -->
        <Grid Grid.Row="10" Margin="0,20,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Refresh every" 
                       Foreground="White" FontSize="12"
                       VerticalAlignment="Center" Margin="0,0,8,0"/>
            
            <TextBox Grid.Column="1" x:Name="RefreshIntervalTextBox" 
                     Background="#2D2D2D" Foreground="White" 
                     BorderBrush="#555555" BorderThickness="1"
                     Padding="3" Height="30" Width="60"
                     HorizontalContentAlignment="Center"
                     VerticalContentAlignment="Center"
                     PreviewTextInput="RefreshIntervalTextBox_PreviewTextInput"
                     PreviewKeyDown="RefreshIntervalTextBox_PreviewKeyDown"
                     TextChanged="RefreshIntervalTextBox_TextChanged"/>
            
            <TextBlock Grid.Column="2" Text="minutes" 
                       Foreground="White" FontSize="12"
                       VerticalAlignment="Center" Margin="8,0,0,0"/>

            <Button Grid.Column="4" x:Name="CancelButton" Content="Cancel" 
                    Width="80" Height="30" Margin="0,0,10,0"
                    Background="#555555" Foreground="White" 
                    BorderBrush="#777777" Click="Cancel_Click"/>
            
            <Button Grid.Column="5" x:Name="SaveButton" Content="Save" 
                    Width="80" Height="30"
                    Background="#0078D4" Foreground="White" 
                    BorderBrush="#0078D4" Click="Save_Click"/>
        </Grid>
    </Grid>
</Window>
